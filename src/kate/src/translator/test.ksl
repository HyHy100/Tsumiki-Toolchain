struct Input {
    @binding(0) m: vec4f,   // binding(0)
    m2: vec4f,              // binding(1)
    @binding(4) m3: vec3u,  // binding(4)
    m4: vec3u               // binding(5)
}

@group(0) @binding(0) 
buffer_ro<float> buffer1; // read only buffer

@group(0) @binding(1)
buffer_ro<fvec3> buffer2; // read only buffer

@group(1)
buffer_wo<Input> buffer3; // write only buffer

# the '@compute' here means a compute shader entry point.
@compute @workgroup_size(1, 1, 1)
void main(
    @builtin local_invocation_id: uvec3,
    @builtin local_invocation_index: uint,
    @builtin global_invocation_id: uint
)
{
    buffer3.m3 = local_invocation_id.xxx * 2u;
}